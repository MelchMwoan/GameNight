# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - GameNight-Avans

on:
  push:
    branches:
      - master
      - PipeLine
      - TestBranch
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Run tests
        run: dotnet test

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
  
      - name: Create Manifest File
        run: dotnet new tool-manifest

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Install EF Tool
        run: dotnet tool install --global dotnet-ef

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Create SQL scripts
        run: dotnet-ef migrations script --project $GITHUB_WORKSPACE/GameNight2/GameNight2.csproj --output $GITHUB_WORKSPACE/SQLData/db.sql --idempotent --context GameNightDbContext

      - name: Create SQL script Security
        run: dotnet-ef migrations script --project $GITHUB_WORKSPACE/GameNight2/GameNight2.csproj --output $GITHUB_WORKSPACE/SQLData/dbSecurity.sql --idempotent --context AccountDbContext
       
      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        
      - name: Publish SQL Script
        uses: actions/upload-artifact@v2
        with:
          name: SQLScripts
          path: ${{github.workspace}}/SQLData/db.sql

      - name: Publish SQL Script Security
        uses: actions/upload-artifact@v2
        with:
          name: SQLScripts
          path: ${{github.workspace}}/SQLData/dbSecurity.sql

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'GameNight-Avans'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}
          package: .

      - name: Download artifact from SQLScript
        uses: actions/download-artifact@v2
        with:
          name: SQLScripts

      - name: Deploy db
        uses: azure/sql-action@v2.2
        with:
          connection-string: ${{secrets.CONNECTIONSTRINGDB}}
          path: ${{github.workspace}}/db.sql
          
      - name: Deploy db
        uses: azure/sql-action@v2.2
        with:
          connection-string: ${{secrets.CONNECTIONSTRINGDBSECURITY}}
          path: ${{github.workspace}}/dbSecurity.sql